@{
    ViewBag.Title = "Array";
    Layout = "~/Views/Shared/_LinearLayout.cshtml";
}

<!-- Tab panes -->
<div class="tab-content">
    <div class="tab-pane active" id="pnlExecute" role="tabpanel" style="margin-top:5px;">
        
    </div>
    <div class="tab-pane" id="pnlCode" role="tabpanel">
        <div class="form-group">
            <div class="row">
                <div class="col-sm-3">
                    <u>Initialization</u>:
                </div>
            </div>
            <div class="row" style="margin-left:10px;margin-bottom:10px;">
                <div class="col-sm-2">
                    Syntax:
                </div>
                <div class="col-sm-10">
                    type[] array-name;
                </div>
            </div>
            <div class="row" style="margin-left:10px;">
                <div class="col-sm-2">
                    Example:
                </div>
                <div class="col-sm-3">
                    string[] names;
                    <br />
                    names = new string[10];
                </div>
                <div class="col-sm-3">
                    string[] names = new string[10];
                </div>
                <div class="col-sm-4">
                    int[] numbers = new int[] {1,2,3,4,5};
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-2">
                    <u>Setting Values</u>:
                </div>
                <div class="col-sm-3" style="margin-left:20px;">
                    names[2] = "Raymond";
                </div>
                <div class="col-sm-3">
                    names.SetValue[2, "Raymond"];
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-2">
                    <u>Accessing Values</u>:
                </div>
                <div class="col-sm-3" style="margin-left:20px;">
                    var myname = names[2];
                </div>
                <div class="col-sm-4">
                    var thisMonthSales = names.GetValue[2];
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-2">
                    <u>Looping Through</u>:
                </div>
                <div class="col-sm-9" style="margin-left:20px;">
                    (for int i = 0; i <= sales.Lenth-1; i++) { 
                        totalSales = totalSales + sales[i]; 
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-3">
                    <u>Methods and Properties</u>:
                </div>
            </div>
            <div class="row" style="margin-left:10px;">
                <div class="col-sm-2">                
                </div>
                <div class="col-sm-1">
                    <u>Length</u>:
                </div>
                <div class="col-sm-8">                     
                    string names[] = new string[10]; var arrayLength = names.Length;
                </div>
            </div>
            <div class="row" style="margin-left:10px;">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-1">
                    <u>GetLength</u>:
                </div>
                <div class="col-sm-8">
                    var a = new int[5,4];  var length = a.GetLength(0);
                </div>
            </div>
            <div class="row" style="margin-left:10px;">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-1">
                    <u>Rank</u>: 
                </div>
                <div class="col-sm-8">
                    var a = new int[5,4];  var length = a.Rank;
                </div>
            </div>
            <div class="row" style="margin-left:10px;">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-1">
                    <u>GetType</u>: 
                </div>
                <div class="col-sm-8">
                    int[] a = new int[5]; var arrayType = a.GetType();
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-2">
                    <u>Array Types</u>:
                </div>
                <div class="col-sm-9" style="margin-left:20px;">
                    Single dimension, Multidimensional, Parameter, and Jagged Arrays
                </div>
            </div>
        </div>
    </div>
    <div class="tab-pane" id="pnlNotes" role="tabpanel">
        <div class="row" style="margin-left:10px;">
            <div class="col-sm-2">
            </div>
            <div class="col-sm-10">
                <u>Length</u>:  Returns total number of elements from all dimensions.
                var arrayLength = names.Length;
                <br />
                <u>GetLength</u>: Returns number of elements of a specified dimension.
                var a = new int[5,4];  var length = a.GetLength(0);
                <br />
                <u>Rank</u>: Returns the number of dimensions of an array.
                var a = new int[5,4];  var length = a.Rank;
                <br />
                <u>GetType</u>: Returns the type of current array instance.
                int[] a = new int[5]; var arrayType = a.GetType();
            </div>
        </div>
    </div>
</div>
